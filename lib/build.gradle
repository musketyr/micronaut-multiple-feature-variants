/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java library project to get you started.
 * For more details take a look at the 'Building Java & JVM projects' chapter in the Gradle
 * User Manual available at https://docs.gradle.org/7.4/userguide/building_java_projects.html
 * This project uses @Incubating APIs which are subject to change.
 */

plugins {
    // Apply the groovy plugin to also add support for Groovy (needed for Spock)
    id 'groovy'

    // Apply the java-library plugin for API and implementation separation.
    id 'java-library'

    id 'maven-publish'
}

sourceSets {
    next {
        java {
            srcDirs = ['src/main/java']
        }
        groovy {
            srcDirs = ['src/main/groovy']
        }
        resources {
            srcDirs = ['src/main/resources']
        }
    }
}

// variants
java {
    registerFeature('next') {
        usingSourceSet(sourceSets.next)
    }
}

repositories {
    // Use Maven Central for resolving dependencies.
    mavenCentral()
}

dependencies {
    api platform('io.micronaut:micronaut-bom:' + micronautVersion)
    api platform('io.micronaut:micronaut-runtime')
    api platform('io.micronaut:micronaut-inject')
    implementation 'io.micronaut:micronaut-function'
    implementation 'io.micronaut.configuration:micronaut-redis-lettuce'
    annotationProcessor platform('io.micronaut:micronaut-bom:' + micronautVersion)
    annotationProcessor 'io.micronaut:micronaut-inject-java'

    nextApi platform('io.micronaut:micronaut-bom:' + micronautNextVersion)
    nextApi platform('io.micronaut:micronaut-runtime')
    nextApi platform('io.micronaut:micronaut-inject')
    nextImplementation 'io.micronaut:micronaut-function'
    nextImplementation 'io.micronaut.redis:micronaut-redis-lettuce'
    nextAnnotationProcessor platform('io.micronaut:micronaut-bom:' + micronautNextVersion)
    nextAnnotationProcessor 'io.micronaut:micronaut-inject-java'
}

testing {
    suites {
        // Configure the built-in test suite
        test {
            // Use Spock test framework
            useSpock('2.0-groovy-3.0')
        }
    }
}

publishing {
    publications {
        myLibrary(MavenPublication) {
            from components.java
        }
    }
}

task printSourceSetInformation(){
    doLast{
        sourceSets.each { srcSet ->
            println "["+srcSet.name+"]"
            print "-->Source directories: "+srcSet.allJava.srcDirs+"\n"
            print "-->Output directories: "+srcSet.output.classesDirs.files+"\n"
            println ""
        }
    }
}